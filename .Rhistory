n <- 30
i <- 1:n
x <- (i-15.5)/14.5
B0.I <- log(0.3/(1-0.3))
B1.I <- 2
logodds.I <- B0.I + B1.I*x[i]
p.I <- exp(logodds.I)/(1+exp(logodds.I))
library(ggplot2)
qplot(x,p.I,geom = "line",main=("p = logit^-1(B0.I + B1.I*x)"), ylab="p")
#Second model:
B0.II <- log(0.3/(1-0.3))
B1.II <- -2
logodds.II <- B0.II + B1.II*x[i]
p.II <- exp(logodds.II)/(1+exp(logodds.II))
#Third model:
B0.III <- log(0.7/(1-0.7))
B1.III <- 2
logodds.III <- B0.III + B1.III*x[i]
p.III <- exp(logodds.III)/(1+exp(logodds.III))
#Storing all this data in one data frame (for plotting purposes):
OurData <- data.frame(i, x,
B0.I, B1.I, logodds.I, p.I,
B0.II, B1.II, logodds.II, p.II,
B0.III, B1.III, logodds.III, p.III)
#Plotting the three models in one chart:
ggplot(data=OurData, aes(x=x, y=p.I)) +
ggtitle("Probability as a function of X with three different\ncombinations of B0 and B1") +
ylab("p") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.2)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
exp(-2)/(1+exp(-2))
p <- 0.119203
round(digits=5,
log(p/(1-p))
)
plot(x,p.I,type="l")
lines(x,P.II,lt=2)
lines(x,p.II,lt=2)
lines(x,p.III,lt=3)
knitr::opts_chunk$set(echo = TRUE)
(juxtaposed.strata<-array(dim=c(2,2,2), c(stratum1,stratum2)))
knitr::opts_chunk$set(echo = TRUE)
(crosstab<-matrix(ncol = 2,c(647,2,622,27),dimnames =
list(c("smoker","non-smoker"),c("cases","controls"))))
addmargins(crosstab)
(odds.smoke.cases<-(647/649)/(1-(647/649)))
(odds.smoke.controls<-(622/649)/(1-(622/649)))
(OR.smoking<-odds.smoke.cases/odds.smoke.controls)
chisq.test(crosstab, correct = FALSE)
addmargins(crosstab2 <- matrix(ncol=2,
c(57,87,118,185),
dimnames = list(c("exposed","non-exposed"),
c("ill","healthy"))))
chisq.test(crosstab2, correct = FALSE)
(stratum1<-matrix(ncol=2, c(16,50,80,165),
dimnames=list(c("exposed","non-exposed"),"Stratum 1"=c("ill","healthy"))))
(stratum2<-matrix(ncol=2, c(41,37,38,20),
dimnames=list(c("exposed","non-exposed"),"Stratum 2"=c("ill","healthy"))))
(OR.stratum1<-(16/80)/(50/165))
(OR.stratum2<-(41/38)/(37/20))
(x2.stratum1<-chisq.test(stratum1, correct = FALSE))
(x2.stratum2<-chisq.test(stratum2, correct = FALSE))
(commonOR.manual<-(((16*165)/311)+((41*20)/136))/(((80*50)/311)+((38*37)/136)))
(juxtaposed.strata<-array(dim=c(2,2,2), c(stratum1,stratum2)))
mantelhaen.test(juxtaposed.strata, correct = FALSE)
n <- 30
i <- 1:n
x <- (i-15.5)/14.5
B0.I <- log(0.3/(1-0.3))
B1.I <- 2
logodds.I <- B0.I + B1.I*x[i]
p.I <- exp(logodds.I)/(1+exp(logodds.I))
library(ggplot2)
qplot(x,p.I,geom = "line",main=("p = logit^-1(B0.I + B1.I*x)"), ylab="p")
#Second model:
B0.II <- log(0.3/(1-0.3))
B1.II <- -2
logodds.II <- B0.II + B1.II*x[i]
p.II <- exp(logodds.II)/(1+exp(logodds.II))
#Third model:
B0.III <- log(0.7/(1-0.7))
B1.III <- 2
logodds.III <- B0.III + B1.III*x[i]
p.III <- exp(logodds.III)/(1+exp(logodds.III))
#Storing all this data in one data frame (for plotting purposes):
OurData <- data.frame(i, x,
B0.I, B1.I, logodds.I, p.I,
B0.II, B1.II, logodds.II, p.II,
B0.III, B1.III, logodds.III, p.III)
#Plotting the three models in one chart:
ggplot(data=OurData, aes(x=x, y=p.I)) +
ggtitle("Probability as a function of X with three different\ncombinations of B0 and B1") +
ylab("p") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.2)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
exp(-2)/(1+exp(-2))
p <- 0.119203
round(digits=5,
log(p/(1-p))
)
log(0.3/(1-0.3))
log(0.7/(1-0.7))
ggplot(data=OurData, aes(x=x, y=p.I)) +
ggtitle("Probability as a function of X with three different\ncombinations of B0 and B1") +
ylab("p") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.2)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III")) + geom_vline(0)
ggplot(data=OurData, aes(x=x, y=p.I)) +
ggtitle("Probability as a function of X with three different\ncombinations of B0 and B1") +
ylab("p") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.2)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III")) + geom_vline(aes(x=0))
ggplot(data=OurData, aes(x=x, y=p.I)) +
ggtitle("Probability as a function of X with three different\ncombinations of B0 and B1") +
ylab("p") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.2)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III")) + geom_vline(aes(xintercept=0))
knitr::opts_chunk$set(echo = TRUE)
(crosstab<-matrix(ncol = 2,c(647,2,622,27),dimnames =
list(c("smoker","non-smoker"),c("cases","controls"))))
addmargins(crosstab)
(odds.smoke.cases<-(647/649)/(1-(647/649)))
(odds.smoke.controls<-(622/649)/(1-(622/649)))
(OR.smoking<-odds.smoke.cases/odds.smoke.controls)
chisq.test(crosstab, correct = FALSE)
addmargins(crosstab2<-matrix(ncol=2, c(57,87,118,185),
dimnames = list(c("exposed","non-exposed"),c("ill","healthy"))))
chisq.test(crosstab2, correct = FALSE)
(stratum1<-matrix(ncol=2, c(16,50,80,165), dimnames=
list(c("exposed","non-exposed"),"Stratum 1"=c("ill","healthy"))))
(stratum2<-matrix(ncol=2,
c(41,37,38,20),dimnames=
list(c("exposed","non-exposed"),"Stratum 2"=c("ill","healthy"))))
(OR.stratum1<-(16/80)/(50/165))
(OR.stratum2<-(41/38)/(37/20))
(x2.stratum1<-chisq.test(stratum1, correct = FALSE))
(x2.stratum2<-chisq.test(stratum2, correct = FALSE))
(commonOR.manual<-(((16*165)/311)+((41*20)/136))/(((80*50)/311)+((38*37)/136)))
(juxtaposed.strata<-array(dim=c(2,2,2), c(stratum1,stratum2)))
mantelhaen.test(juxtaposed.strata, correct = FALSE)
#The common parameters:
n <- 30
i <- 1:n
x <- (i-15.5)/14.5
#Model I
B0.I <- log(0.3/(1-0.3))
B1.I <- 2
logodds.I <- B0.I + B1.I*x[i]
p.I <- exp(logodds.I)/(1+exp(logodds.I))
#Model II:
B0.II <- log(0.3/(1-0.3))
B1.II <- -2
logodds.II <- B0.II + B1.II*x[i]
p.II <- exp(logodds.II)/(1+exp(logodds.II))
#Model III:
B0.III <- log(0.7/(1-0.7))
B1.III <- 2
logodds.III <- B0.III + B1.III*x[i]
p.III <- exp(logodds.III)/(1+exp(logodds.III))
#Storing all the data in one data frame (for plotting purposes):
OurData <- data.frame(i, x,
B0.I, B1.I, logodds.I, p.I,
B0.II, B1.II, logodds.II, p.II,
B0.III, B1.III, logodds.III, p.III)
#Plotting all three models on one X-Y plane:
library(ggplot2)
ggplot(data=OurData, aes(x=x, y=p.I)) +
ggtitle("Probability as a function of X with three different \ncombinations of B0 and B1",
subtitle = "n = 30") +
ylab("p") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.2)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III")) +
geom_vline(aes(xintercept=0))
exp(-2)/(1+exp(-2))
p <- 0.119203
round(log(p/(1-p)), digits=6)
round(log(p/(1-p)), digits=5)
matrix(ncol=2,
c(41,37,38,20),dimnames=
list("Stratum 3"=c("exposed","non-exposed"),=c("ill","healthy")))
matrix(ncol=2,
c(41,37,38,20),dimnames=
list(Stratum3=c("exposed","non-exposed"),=c("ill","healthy")))
matrix(ncol=2,
c(41,37,38,20),dimnames=
list(Stratum3=c("exposed","non-exposed"),c("ill","healthy")))
library("gsubfn", lib.loc="~/R/win-library/3.3")
COCAspok <- read.delim(file=choose.files(), header=FALSE, quote="", stringsAsFactors=FALSE, skipNul = T)
ketju1<-paste(COCAspok$V1,COCAspok$V3,sep="_",collapse=" ")
ketju2<-gsub(" {2,}"," ",ketju1,perl=T)
ketju3<-gsub("(\\S+)_y","\\1_\\1",ketju2,perl=T)
substr(ketju3,5000000,5001000)
cat(ketju2,file="COCAspok2012_c7.txt",sep="\n")
knitr::opts_chunk$set(echo = TRUE)
N<-15
n<-2*N+1
x1<-c(-N:N)/N
plot(x1)
plot(x1,type="l")
x2<-c(rep(0,round(n/3)),rep(1,n-round(n/3)))
table(x2)
X<-cbind(x0,x1,x2)
x0<-rep(1,n)
table(x0)
X<-cbind(x0,x1,x2)
X
B<-c(log(0.3/0.7),1,-0.3)
B
lp<-X%*%B
lp
p<-exp(lp)/(1+exp(lp))
1->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
1->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
1->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
2->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
mean(p)
2->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
3->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
4->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
5->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
6->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
100->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
101->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
102->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
103->seed;set.seed(seed);U<-runif(n);y<-as.numeric(U<p);table(y);mean(y)
?runif
runif(10)
mean(runif(10))
mean(runif(10))
mean(runif(10))
mean(runif(10))
mean(runif(10))
mean(runif(10))
mean(runif(10))
mean(runif(10))
mean(runif(10))
mean(runif(10))
mean(runif(10))
mean(runif(10))
mtable<-matrix(ncol = 2,c(27,44,95,443),dimnames =
list(c("c1","c0"),c("ill","healthy"))))
mtable<-matrix(ncol = 2,c(27,44,95,443),dimnames =
list(c("c1","c0"),c("ill","healthy")))
glm(mtable,family=binomial)
mtable
setwd(dir="c:/users/juho/desktop")
setwd("ALR")
knitr::opts_chunk$set(echo = TRUE)
model1<-glm(bc.use ~ Age+Education+WantsMore+Age*Education+Age*WantsMore+Education*WantsMore,
family=binomial(link="logit"), data=bc)
knitr::opts_chunk$set(echo = TRUE)
(e1<-matrix(ncol=4,
c(2.5634,0.7579,0.5033,NA,0.2071,0.3137,NA,0.2873,-12.380,NA,1.800,1.179,2*pnorm(-12.380),0.0157,0.0719,NA),
dimnames=list(c("(Intercept)","C","D","G"),c("Estimate","Std.Err","z-value","Pr(>|z|)"))))
(e1["C","z-value"] <- e1["C","Estimate"] / e1["C","Std.Err"])
e1
(e1["D","Std.Err"] <- e1["D","Estimate"] / e1["D","z-value"])
e1
(e1["G","Estimate"] <- e1["G","z-value"] * e1["G","Std.Err"])
e1
(e1["G","Pr(>|z|)"] <- 2*(1-pnorm(abs(e1["G","z-value"]))))
zplot <- function(critical) {
critical <- round(critical, 5)
z <- c(-critical, critical)
par(mar = c(7,4,5,4))
x <- (-40:40)/10
y <- dnorm(x)
main = paste("The N(0, 1) distribution \n z = ",critical)
plot(x, y, type = "l", xaxt = "n", ylab = "n", main = main)
axis(1, at = c(-3,  0,  3))
axis(1, at = round(z, 2) , col.ticks = "red", las = 2)
# highlight critical regions, add matching percentages
x1 <- x[x<=min(z)]; x2 <- x[x>=max(z)]
a <- round(pnorm(min(z)),5)
polygon(c(min(x1),x1, max(x1), min(x2), x2, max(x2)),
c(0, dnorm(x1),0, 0, dnorm(x2), 0), col = "grey60")
text(x = c(-3.5, 3.5), y = c(0.08,0.08), labels = paste0(a*100,"%"), cex = 1.5)
text(x = 0, y = 0.08, labels=paste0(100*(1-a*2),"%"), cex = 1.5)
}
zplot(e1["G","z-value"])
addmargins(mtable<-matrix(ncol = 2,c(27,44,95,443),dimnames =
list(c("c1","c0"),c("ill","healthy"))))
CHD <- c(rep(1,times=71),rep(0,times=538))
cat.high <- c(rep(1,times=27),rep(0,times=44),rep(1,times=95),rep(0,times=443))
catecholamine<-glm(CHD ~ cat.high, family = binomial(link="logit"))
summary(catecholamine)
(a0e0<-matrix(ncol = 2, c(1,17,7,257),
dimnames=list(c("c1","c0"),a0e0=c("ill","healthy"))))
(a0e1<-matrix(ncol = 2, c(3,7,14,52),
dimnames=list(c("c1","c0"),a0e1=c("ill","healthy"))))
(a1e0<-matrix(ncol = 2, c(9,15,30,107),
dimnames=list(c("c1","c0"),a1e0=c("ill","healthy"))))
(a1e1<-matrix(ncol = 2, c(14,5,44,27),
dimnames=list(c("c1","c0"),a1e1=c("ill","healthy"))))
type1<-data.frame(ill=1,high.cat=1,over54=0,ECG.bad=0) #a0e0c1 -- ill
type2<-data.frame(ill=rep(1,times=17),high.cat=0,over54=0,ECG.bad=0) #a0e0c1 -- ill
type3<-data.frame(ill=rep(0,times=7),high.cat=1,over54=0,ECG.bad=0) #a0e0c0 -- healthy
type4<-data.frame(ill=rep(0,times=257),high.cat=0,over54=0,ECG.bad=0) #a0e0c1 -- healthy
type5<-data.frame(ill=rep(1,times=3),high.cat=1,over54=0,ECG.bad=1) #a0e1c1 -- ill
type6<-data.frame(ill=rep(1,times=7),high.cat=0,over54=0,ECG.bad=1) #a0e1c0 -- ill
type7<-data.frame(ill=rep(0,times=14),high.cat=1,over54=0,ECG.bad=1) #a0e1c1 -- healthy
type8<-data.frame(ill=rep(0,times=52),high.cat=0,over54=0,ECG.bad=1) #a1e1c0 -- healthy
type9<-data.frame(ill=rep(1,times=9),high.cat=1,over54=1,ECG.bad=0) #a1e0c1 -- ill
type10<-data.frame(ill=rep(1,times=15),high.cat=0,over54=1,ECG.bad=0) #a1e0c0 -- ill
type11<-data.frame(ill=rep(0,times=30),high.cat=1,over54=1,ECG.bad=0) #a1e0c1 -- healthy
type12<-data.frame(ill=rep(0,times=107),high.cat=0,over54=1,ECG.bad=0) #a1e0c1 -- healthy
type13<-data.frame(ill=rep(1,times=14),high.cat=1,over54=1,ECG.bad=1) #a1e1c1 -- ill
type14<-data.frame(ill=rep(1,times=5),high.cat=0,over54=1,ECG.bad=1) #a1e1c0 -- ill
type15<-data.frame(ill=rep(0,times=44),high.cat=1,over54=1,ECG.bad=1) #a1e1c1 -- healthy
type16<-data.frame(ill=rep(0,times=27),high.cat=0,over54=1,ECG.bad=1) #a1e1c0 -- healthy
EvansData<-rbind(type1,type2,type3,type4,type5,type6,type7,type8,
type9,type10,type11,type12,type13,type14,type15,type16) #Concatenate
EvansData[sample(nrow(EvansData),size=10),] #View 10 randomly sampled rows
EvansModel<-glm(ill ~ high.cat+over54+ECG.bad, data = EvansData, family=binomial(link = "logit"))
summary(EvansModel)
Evans.4p <- glm(formula = ill ~ high.cat + over54 + ECG.bad + over54*ECG.bad,
data=EvansData, family=binomial(link="logit"))
summary(Evans.4p)
subsample1<-data.frame(Age=rep("<25",53),Education="Low",WantsMore="yes",bc.use=0)
subsample2<-data.frame(Age=rep("<25",6),Education="Low",WantsMore="yes",bc.use=1)
subsample3<-data.frame(Age=rep("<25",10),Education="Low",WantsMore="no",bc.use=0)
subsample4<-data.frame(Age=rep("<25",4),Education="Low",WantsMore="no",bc.use=1)
subsample5<-data.frame(Age=rep("<25",212),Education="High",WantsMore="yes",bc.use=0)
subsample6<-data.frame(Age=rep("<25",52),Education="High",WantsMore="yes",bc.use=1)
subsample7<-data.frame(Age=rep("<25",50),Education="High",WantsMore="no",bc.use=0)
subsample8<-data.frame(Age=rep("<25",10),Education="High",WantsMore="no",bc.use=1)
subsample9<-data.frame(Age=rep("25-29",60),Education="Low",WantsMore="yes",bc.use=0)
subsample10<-data.frame(Age=rep("25-29",14),Education="Low",WantsMore="yes",bc.use=1)
subsample11<-data.frame(Age=rep("25-29",19),Education="Low",WantsMore="no",bc.use=0)
subsample12<-data.frame(Age=rep("25-29",10),Education="Low",WantsMore="no",bc.use=1)
subsample13<-data.frame(Age=rep("25-29",155),Education="High",WantsMore="yes",bc.use=0)
subsample14<-data.frame(Age=rep("25-29",54),Education="High",WantsMore="yes",bc.use=1)
subsample15<-data.frame(Age=rep("25-29",65),Education="High",WantsMore="no",bc.use=0)
subsample16<-data.frame(Age=rep("25-29",27),Education="High",WantsMore="no",bc.use=1)
subsample17<-data.frame(Age=rep("30-39",112),Education="Low",WantsMore="yes",bc.use=0)
subsample18<-data.frame(Age=rep("30-39",33),Education="Low",WantsMore="yes",bc.use=1)
subsample19<-data.frame(Age=rep("30-39",77),Education="Low",WantsMore="no",bc.use=0)
subsample20<-data.frame(Age=rep("30-39",80),Education="Low",WantsMore="no",bc.use=1)
subsample21<-data.frame(Age=rep("30-39",118),Education="High",WantsMore="yes",bc.use=0)
subsample22<-data.frame(Age=rep("30-39",46),Education="High",WantsMore="yes",bc.use=1)
subsample23<-data.frame(Age=rep("30-39",68),Education="High",WantsMore="no",bc.use=0)
subsample24<-data.frame(Age=rep("30-39",78),Education="High",WantsMore="no",bc.use=1)
subsample25<-data.frame(Age=rep("40-49",35),Education="Low",WantsMore="yes",bc.use=0)
subsample26<-data.frame(Age=rep("40-49",6),Education="Low",WantsMore="yes",bc.use=1)
subsample27<-data.frame(Age=rep("40-49",46),Education="Low",WantsMore="no",bc.use=0)
subsample28<-data.frame(Age=rep("40-49",48),Education="Low",WantsMore="no",bc.use=1)
subsample29<-data.frame(Age=rep("40-49",8),Education="High",WantsMore="yes",bc.use=0)
subsample30<-data.frame(Age=rep("40-49",8),Education="High",WantsMore="yes",bc.use=1)
subsample31<-data.frame(Age=rep("40-49",12),Education="High",WantsMore="no",bc.use=0)
subsample32<-data.frame(Age=rep("40-49",31),Education="High",WantsMore="no",bc.use=1)
bc<-rbind(subsample1,subsample2,subsample3,subsample4,subsample5,subsample6,
subsample7,subsample8,subsample9,subsample10,subsample11,subsample12,subsample13,
subsample14,subsample15,subsample16,subsample17,subsample18,subsample19,subsample20,
subsample21,subsample22,subsample23,subsample24,subsample25,subsample26,subsample27,
subsample28,subsample29,subsample30,subsample31,subsample32)
#Make WantsMore a binary variable where 0=no and 1=yes:
bc$WantsMore<-as.numeric(bc$WantsMore); bc$WantsMore[bc$WantsMore==2]<-0
model1<-glm(bc.use ~ Age+Education+WantsMore+Age*Education+Age*WantsMore+Education*WantsMore,
family=binomial(link="logit"), data=bc)
summary(model1) #Model summary
data.frame(exp(coef(model1))) #Odds ratios
with(bc,table(Age))
with(bc,table(Age,WantsMore))
with(bc[Age=="40-49",],table(Education,WantsMore))
with(bc[bc$Age=="40-49",],table(Education,WantsMore))
41/94
16/43
with(bc[bc$Age=="40-49"&bc$WantsMore==1,],table(bc.use))
summary(glm(bc.use~Age*Education+Age*WantsMore+WantsMore*Education,family=binomial(link = "logit"),data=bc))
summary(glm(bc.use~Age+Education+WantsMore,family=binomial(link = "logit"),data=bc))
with(bc,table(Age,WantsMore))
model1<-glm(bc.use ~ Age+Education+WantsMore, family=binomial(link="logit"), data=bc)
summary(model1) #Model summary
data.frame(exp(coef(model1))) #Odds ratios
model2<-glm(bc.use ~ Age*Education+Age*WantsMore+Education*WantsMore,
family=binomial(link="logit"), data=bc)
summary(model2) #Model summary
data.frame(exp(coef(model2))) #Odds ratios
summary(glm(bc.use~Education*Age+WantsMore*Age+Education*WantsMore,family=binomial(link = "logit"),data=bc))
summary(glm(bc.use~Education*Age+WantsMore*Age+WantsMore*Education,family=binomial(link = "logit"),data=bc))
nrow(bc)
library(boot)
summary(predict(model1,bc,type = "response"))
summary(bc$bc.use)
head(predict(model1,bc,type = "response"))
library(nnet)
predict.multinom
predict.multinom()
ErrorRate<-function(Y,prob){wrong<-abs(Y-prob)>0.5;return(mean(wrong))}
ErrorRate(Y=bc$bc.use,predict(model1,bc,type="response"))
ErrorRate(Y=bc$bc.use,predict(model2,bc,type="response"))
risti<-cv.glm(bc,model1,ErrorRate)
names(risti)
risti$delta
risti$seed
risti$K
risti$call
mean(abs(bc$bc.use-predict(model2,bc,type="response")))
mean(abs(bc$bc.use-predict(model2,bc,type="response"))>0.5)
mean(abs(bc$bc.use-predict(model1,bc,type="response"))>0.5)
ErrorRate<-function(Y,prob){mean(abs(Y-prob)>0.5)} #Define Error Rate
ErrorRate(bc$bc.use,predict(model1,bc,type="response"))
ErrorRate(bc$bc.use,predict(model2,bc,type="response"))
data.frame(Model1.TestingError=cv.glm(data=bc, glmfit=model1, cost=ErrorRate)$delta[1],
Model2.TestingError=cv.glm(data=bc, glmfit=model2, cost=ErrorRate)$delta[1])
risti2<-cv.glm(bc,model2,ErrorRate)
risti$delta
risti2$delta
names(model1)
head(model1$fitted.values)
head(model1$y)
head(model1$converged)
head(model1$family)
coef(model2)
risti$call
coef(model1)
risti2$call
risti2$delta
risti2$K
with(bc[bc$Age30-39,],table(bc.use))
with(bc[bc$Age=="30-39",],table(bc.use))
with(bc[bc$Age=="30-39",],table(WantsMore))
cv.glm(bc,model1,ErrorRate,K = 2)$delta
cv.glm(bc,model2,ErrorRate,K = 2)$delta
cv.glm(bc,model1,ErrorRate,K = 10)$delta
cv.glm(bc,model2,ErrorRate,K = 10)$delta
nrow(bc)
list(ls=all)
list
list()
subset1<-data.frame(Proximity=rep(1,times=77),Contact=1,Norms="Favorable",PositiveSentiment=1)
subset2<-data.frame(Proximity=rep(1,times=32),Contact=1,Norms="Favorable",PositiveSentiment=0)
subset3<-data.frame(Proximity=rep(1,times=30),Contact=1,Norms="Unfavorable",PositiveSentiment=1)
subset4<-data.frame(Proximity=rep(1,times=36),Contact=1,Norms="Unfavorable",PositiveSentiment=0)
subset5<-data.frame(Proximity=rep(1,times=14),Contact=0,Norms="Favorable",PositiveSentiment=1)
subset6<-data.frame(Proximity=rep(1,times=19),Contact=0,Norms="Favorable",PositiveSentiment=0)
subset7<-data.frame(Proximity=rep(1,times=15),Contact=0,Norms="Unfavorable",PositiveSentiment=1)
subset8<-data.frame(Proximity=rep(1,times=27),Contact=0,Norms="Unfavorable",PositiveSentiment=0)
subset9<-data.frame(Proximity=rep(0,times=43),Contact=1,Norms="Favorable",PositiveSentiment=1)
subset10<-data.frame(Proximity=rep(0,times=20),Contact=1,Norms="Favorable",PositiveSentiment=0)
subset11<-data.frame(Proximity=rep(0,times=36),Contact=1,Norms="Unfavorable",PositiveSentiment=1)
subset12<-data.frame(Proximity=rep(0,times=37),Contact=1,Norms="Unfavorable",PositiveSentiment=0)
subset13<-data.frame(Proximity=rep(0,times=27),Contact=0,Norms="Favorable",PositiveSentiment=1)
subset14<-data.frame(Proximity=rep(0,times=36),Contact=0,Norms="Favorable",PositiveSentiment=0)
subset15<-data.frame(Proximity=rep(0,times=41),Contact=0,Norms="Unfavorable",PositiveSentiment=1)
subset16<-data.frame(Proximity=rep(0,times=118),Contact=0,Norms="Unfavorable",PositiveSentiment=0)
contact<-rbind(subset1,subset2,subset3,subset4,subset5,subset6,subset7,subset8,subset9,subset10,
subset11,subset12,subset13,subset14,subset15,subset16)
con.model1<-glm(PositiveSentiment ~ Proximity+Contact+Norms,
family=binomial(link = "logit"), data=contact)
summary(con.model1)
exp(confint(con.model1))
nrow(contact)
names(contact)
summary(glm(PositiveSentiment~Proximity*Contact+Proximity*Norms+Contact*Norms,family=binomial(link="logit",data=contact)))
summary(glm(PositiveSentiment~Proximity*Contact+Proximity*Norms+Contact*Norms,family=binomial(link="logit"),data=contact))
con.model2<-glm(PositiveSentiment ~ Proximity*Contact+Proximity*Norms,Contact*Norms,
family=binomial(link="logit"),data=contact)
con.model2<-glm(PositiveSentiment ~ Proximity*Contact+Proximity*Norms+Contact*Norms,
family=binomial(link="logit"),data=contact)
summary(con.model2)
summary(con.model1)
summary(con.model2)
con.model3<-glm(PositiveSentiment ~ Contact+Norms, family=binomial(link="logit"),data=contact)
summary(con.model3)
library("boot", lib.loc="C:/Program Files/R/R-3.3.3/library")
ErrorRate<-function(Y,prob){mean(abs(Y-prob)>0.5)} #Define Error Rate
kristi3<-cv.glm(contact,con.model3,ErrorRate)
kristi2<-cv.glm(contact,con.model2,ErrorRate)
summary(con.model2)
summary(con.model3)
kristi2$delta
kristi3$delta
names(kristi2)
names(kristi3)
kristi2$call
kristi3$call
summary(con.model2)
summary(con.model3)
kristi1<-cv.glm(contact,con.model1,ErrorRate)
kristi1$delta
kristi2$delta
kristi3$delta
data.frame(ConModel2.TestingError = cv.glm(data=contact, glmfit=con.model2, cost=ErrorRate)$delta[1],
ConModel3.TestingError = cv.glm(data=contact, glmfit=con.model3, cost=ErrorRate)$delta[1])
data.frame(ConModel1.TestingError = cv.glm(data=contact, glmfit=con.model1, cost=ErrorRate)$delta[1],
ConModel2.TestingError = cv.glm(data=contact, glmfit=con.model2, cost=ErrorRate)$delta[1],
ConModel3.TestingError = cv.glm(data=contact, glmfit=con.model3, cost=ErrorRate)$delta[1])
