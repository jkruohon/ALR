mean(ToothGrowth$len[ToothGrowth$supp=="OJ"&ToothGrowth$dose==2.0])
alaryhmienkeskiarvot<-c(mean(ToothGrowth$len[ToothGrowth$supp=="VC"&ToothGrowth$dose==0.5]),mean(ToothGrowth$len[ToothGrowth$supp=="OJ"&ToothGrowth$dose==0.5]),mean(ToothGrowth$len[ToothGrowth$supp=="VC"&ToothGrowth$dose==1]),mean(ToothGrowth$len[ToothGrowth$supp=="OJ"&ToothGrowth$dose==1]),mean(ToothGrowth$len[ToothGrowth$supp=="VC"&ToothGrowth$dose==2]),mean(ToothGrowth$len[ToothGrowth$supp=="OJ"&ToothGrowth$dose==2]))
alaryhmienkeskiarvot<-c(mean(ToothGrowth$len[ToothGrowth$supp=="VC"&ToothGrowth$dose==0.5]),)
mean(ToothGrowth$len[ToothGrowth$dose==0.5&ToothGrowth$supp=="VC"])
mean(ToothGrowth$len[ToothGrowth$dose==0.5&ToothGrowth$supp=="OJ"])
mean(ToothGrowth$len[ToothGrowth$dose==1&ToothGrowth$supp=="VC"])
ryhmienkeskiarvot<-vector(length(6))
ryhmienkeskiarvot<-vector(length=6)
ryhmienkeskiarvot
ryhmienkeskiarvot[1]<-mean(ToothGrowth$len[ToothGrowth$dose==0.5&ToothGrowth$supp=="VC"])
ryhmienkeskiarvot[2]<-mean(ToothGrowth$len[ToothGrowth$dose==0.5&ToothGrowth$supp=="OJ"])
ryhmienkeskiarvot[3]<-mean(ToothGrowth$len[ToothGrowth$dose==1&ToothGrowth$supp=="VC"])
ryhmienkeskiarvot[4]<-mean(ToothGrowth$len[ToothGrowth$dose==1&ToothGrowth$supp=="OJ"])
ryhmienkeskiarvot[5]<-mean(ToothGrowth$len[ToothGrowth$dose==2&ToothGrowth$supp=="VC"])
ryhmienkeskiarvot[6]<-mean(ToothGrowth$len[ToothGrowth$dose==2&ToothGrowth$supp=="OJ"])
ryhmienkeskiarvot
autot <- read.csv2("C:/Users/Juho Kristian/Desktop/autot.csv")
View(autot)
Sys.time()
?mean
isotnumerot
is.vector(isotnumerot)
is.factor(isotnumerot)
is.factor(words)
data()
data(AirPassengers)
data("Titanic")
Titanic
head(Titanic)
Titanic
HSL <- read.csv("C:/Users/Juho Kristian/Desktop/HSL.csv")
View(HSL)
View(Titanic)
HSL <- read.csv("C:/Users/Juho Kristian/Desktop/HSL.csv", encoding="UTF-8")
View(HSL)
plot
m
a<-c("Matti","Mikko","Maija")
b<-c("Jartsa","Janne","Jamppa")
matrix(a)
plot
plot(a,b)
data(cats)
matrix
rep
ls()
str(lazy)
rep(c(1,2),times=2,each=3)
gsub
library(gsubfn)
View(ToothGrowth)
teksti<-sample(LETTERS[3],10,replace=T)
teksti
teksti<-sample(LETTERS[1:3],10,replace=T)
teksti
summary(teksti)
group<-as.factor(teksti)
group
length(teksti)
length(group)
summary(group)
table(teksti)
data("ToothGrowth")
summary(ToothGrowth)
nlevels(ToothGrowth$supp) #kertoo levelien määrän
levels(ToothGrowth$supp)
labels(ToothGrowth$supp)
data("iris")
summary(iris)
View(iris)
head(iris,6)
plot(Sepal.Length~Sepal.Width,iris)
plot(Sepal.Length~Species,iris)
t,test(Sepal.Length~Species,iris,subset=Species!="setosa")
t.test(Sepal.Length~Species,iris,subset=Species!="setosa")
View(ToothGrowth)
summary(ToothGrowth)
str(ToothGrowth)
plot(len~dose,ToothGrowth)
plot(len~supp,ToothGrowth)
plot(len~dose,ToothGrowth)
plot(len~supp,ToothGrowth) #samantapasta mutta hammasjuttuja. öö, dose on jatkuva muuttuja joten siksi tulee erinäköinen plotti (scatterplotti tms) kuin jos olisi kategorinen(diskreetti) muuttuja kuten supp.
plot(Sepal.Length~Sepal.Width,iris) #piirrä mitenkä korreloi lehden pituus lehden leveyden kanssa. pelkkä iris riitää data=iriksen sijaan jos se tulee juuri tuossa kohtaa.
plot(Sepal.Length~Species,iris) #nyt selittävänä muuttujana on faktori eli tässä tapauksessa kukan alalaji. jolla on 3 leveliä eli 3 muuttujaa.
rm(HSL)
rm(isotnumerot)
rm(pienetnumerot)
rm(numeroit)
rm(lämpötila)
boxplot(len~supp,ToothGrowth)
plot(len~supp,ToothGrowth) #samantapasta mutta hammasjuttuja. öö, dose on jatkuva muuttuja joten siksi tulee erinäköinen plotti (scatterplotti tms) kuin jos olisi kategorinen(diskreetti) muuttuja kuten supp.
boxplot(len~supp,ToothGrowth)
plot(len~supp,ToothGrowth) #samantapasta mutta hammasjuttuja. öö, dose on jatkuva muuttuja joten siksi tulee erinäköinen plotti (scatterplotti tms) kuin jos olisi kategorinen(diskreetti) muuttuja kuten supp.
plot(len~supp,ToothGrowth) #samantapasta mutta hammasjuttuja. öö, dose on jatkuva muuttuja joten siksi tulee erinäköinen plotti (scatterplotti tms) kuin jos olisi kategorinen(diskreetti) muuttuja kuten supp.
plot(len~dose,ToothGrowth)
boxplot(len~dose,ToothGrowth)
plot(len~dose+supp,ToothGrowth)
plot(len~dose,ToothGrowth)
plot(len~dose+supp,ToothGrowth)
?points
plot(len~supp,ToothGrowth) #samantapasta mutta hammasjuttuja. öö, dose on jatkuva muuttuja joten siksi tulee erinäköinen plotti (scatterplotti tms) kuin jos olisi kategorinen(diskreetti) muuttuja kuten supp.
boxplot(len~dose,ToothGrowth) #tämä vissiin käsittelee selittävää muuttujaa IKÄÄN KUIN se olisi faktori, vaikkei se ole.
boxplot(len~dose,ToothGrowth) #tämä vissiin käsittelee selittävää muuttujaa IKÄÄN KUIN se olisi faktori, vaikkei se ole.
plot(len~dose,ToothGrowth) #tämä vissiin käsittelee selittävää muuttujaa IKÄÄN KUIN se olisi faktori, vaikkei se ole.
boxplot(len~dose,ToothGrowth) #tämä vissiin käsittelee selittävää muuttujaa IKÄÄN KUIN se olisi faktori, vaikkei se ole.
plot(len~dose,ToothGrowth)
boxplot(len~dose,ToothGrowth) #tämä vissiin käsittelee selittävää muuttujaa IKÄÄN KUIN se olisi faktori, vaikkei se ole.
plot(len~dose+supp,ToothGrowth) #niitä selittäviä muuttujia voi yhdistääkkin, mutta en oikein tajua miten se muka sen tekee.
boxplot(len~dose+supp,ToothGrowth)
plot(Sepal.Length~Sepal.Width,data=iris,col=Species)
plot(Sepal.Length~Sepal.Width,data=iris)
plot(Sepal.Length~Sepal.Width,data=iris)
points(Sepal.Length~Sepal.Width,data=iris,subset=Species=="setosa")
points(Sepal.Length~Sepal.Width,data=iris,subset=Species=="setosa")
points(Sepal.Length~Sepal.Width,data=iris,subset=Species=="setosa")
points(Sepal.Length~Sepal.Width,data=iris,subset=Species=="setosa",col="red")
View(iris)
points(Sepal.Length~Sepal.Width,data=iris,subset=Species=="versicolor",col="blue")
points(Sepal.Length~Sepal.Width,data=iris,subset=Species=="virginica",col="green")
install.packages("statfi")
library("statfi", lib.loc="~/R/win-library/3.3")
list_statfi_files()
tmp<-list_statfi_files
tmp<-list_statfi_files()
View(tmp)
library("foreign", lib.loc="C:/Program Files/R/R-3.3.1/library")
datatable <- read.csv("F:/R-kurssi/datatable.csv", quote="")
View(datatable)
str(datatable)
summary(datatable)
data(iris)
summary(iris)
summary(iris)
iris$Sepal.Area<-iris$Sepal.Width*iris$Sepal.Length #näin tehdään olemassaolevaan dataframeen uusi kolonna, jonka arvot tulee kertomalla noiden khden muun kolonnan arvot keskenään
iris$random<-sample(1:3,150,replace=T)
iris$random<-sample(1:3,150,replace=T) #ja nyt lisättiin melko umpimähkäinen uusi kolonna)
install.packages("dplyr")
select(iris,Sepal.Width,Petal.Length,Species)
dplyr
select
dplyr:select
sepal<-select(iris,starts_with("Sepal"))
isolehtiset<-dplyr::filter(iris,Sepal.Length>7) #tämä filtteröi
sepal<-select(iris,starts_with("Sepal")) #kun dplyr asennettu, niin tämä tekee iris-dataframesta alataulukon jossa on vain ne kolonnat, joiden nimet alkavat Sepal
sepal<-select(iris,starts_with("Sepal"),Species) #ja tämä ottaa niiden lisäksi kolonnan Species
sepal<-dplyr:select(iris,starts_with("Sepal")) #kun dplyr asennettu, niin tämä tekee iris-dataframesta alataulukon jossa on vain ne kolonnat, joiden nimet alkavat Sepal
sepal<-dplyr::select(iris,starts_with("Sepal")) #kun dplyr asennettu, niin tämä tekee iris-dataframesta alataulukon jossa on vain ne kolonnat, joiden nimet alkavat Sepal
sepal<-dplyr::select(iris,starts_with("Sepal"),Species) #ja tämä ottaa niiden lisäksi kolonnan Species
isolehtiset<-dplyr::filter(iris,Sepal.Length>7) #tämä filtteröi
sepal<-dplyr::select(iris,starts_with("Sepal")) #kun dplyr asennettu, niin tämä tekee iris-dataframesta alataulukon jossa on vain ne kolonnat, joiden nimet alkavat Sepal
sepal<-dplyr::select(iris,starts_with("Sepal")) #kun dplyr asennettu, niin tämä tekee iris-dataframesta alataulukon jossa on vain ne kolonnat, joiden nimet alkavat Sepal
sepal<-dplyr::select(iris,starts_with("Sepal")) #kun dplyr asennettu, niin tämä tekee iris-dataframesta alataulukon jossa on vain ne kolonnat, joiden nimet alkavat Sepal
sepal<-dplyr::select(iris,starts_with("Sepal")) #kun dplyr asennettu, niin tämä tekee iris-dataframesta alataulukon jossa on vain ne kolonnat, joiden nimet alkavat Sepal
version()
??version
library("dplyr", lib.loc="~/R/win-library/3.3")
sepal<-dplyr::select(iris,starts_with("Sepal")) #kun dplyr asennettu, niin tämä tekee iris-dataframesta alataulukon jossa on vain ne kolonnat, joiden nimet alkavat Sepal
sepal<-dplyr::select(iris,starts_with("Sepal")) #kun dplyr asennettu, niin tämä tekee iris-dataframesta alataulukon jossa on vain ne kolonnat, joiden nimet alkavat Sepal
sepal<-dplyr::select(iris,starts_with("Sepal")) #kun dplyr asennettu, niin tämä tekee iris-dataframesta alataulukon jossa on vain ne kolonnat, joiden nimet alkavat Sepal
sepal<-dplyr::select(iris,starts_with("Sepal"),Species) #ja tämä ottaa niiden lisäksi kolonnan Species
head(datatable)
names(datatable)
datatable_dummy<-datatable
names(datatable_dummy)<-c("varsinainen muuttuja","liipaisimenvahvuus","liipaisimenNumeerinenVahvuus","liipasimen ambiguösiteetti","liipasimen identiteeetti","sanaluokka")
head(datatable_dummy)
rm(datatable_dummy)
rm(tmp
)
ms<-8;should<-10;harmony<-7
iris$koko <- cut(iris$Sepal.Length,breaks=c(5,6))
iris$koko <- cut(iris$Sepal.Length,breaks=c(0,5,6,10))
summary(iris$koko)
iris$koko <- cut(iris$Sepal.Length,breaks=c(0,5,6,10),labels=c("pieni","keskisuuri","iso"))
plot(Sepal.Length~Sepal.Width,iris)
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.3")
ggplot(iris,aes(Sepal.Width,Sepal.Length)) + geom_point()
ggplot(iris,aes(Sepal.Width,Sepal.Length)) + geom_point(aes(color=Species))
plot(Sepal.Length~Species,iris)
ggplot(irits,aes(Species,Sepal.Length)) + geom_boxplot()
ggplot(iris,aes(Species,Sepal.Length)) + geom_boxplot()
ggplot(iris,aes(Sepal.Length))+geom.histogram()
ggplot(iris,aes(Sepal.Length))+geom_histogram()
ggplot(iris,aes(Sepal.Length))+geom_histogram(bins=10)
xtabs(~Species+koko,irits)
ggplot(iris,aes(Sepal.Length))+geom_histogram()
xtabs(~Species+koko,irits)
xtabs(~Species+koko,iris)
fake<-data.frame(time=1:12,value=rmpr,(12))
fake<-data.frame(time=1:12,value=rnorm,(12))
fake<-data.frame(time=1:12,value=rnorm(12))
ggplot(fake,aes(time,value)) + geom_line
ggplot(fake,aes(time,value)) + geom_line()
fake
sapply
ToothGrowth
summarise(iris,avg=mean(Sepal.Length))
iris_grouped<-group_by(iris,Species)
summarise(iris_grouped,avg=mean(Sepal.Length))
summarise(iris_grouped,avg=mean(Sepal.Length),maksimi.SL=max(Sepal.Length),maksimi.PL=max(Petal.Length))
aggregate(Sepal.Length~Species,iris,FUN=mean)
rm(ms,should,must)
rm(harmony)
as.numeric(datatable$depvar=="ms)
depvar.is.ms<-as.numeric(datatable$depvar=="ms)
)
depvar.is.ms<-as.numeric(datatable$depvar=="ms))
)
))
)
depvar.is.ms<-as.numeric(datatable$depvar=="ms") #ei toimaa
head(depvar.is.ms)
datatable$is.0<-as.numeric(datatable$depvar=="ms") #ei toimaa
rm(depvar.is.ms)
View(datatable)
help("as.numeric")
as.numeric(datatable$depvar)
rm(datatable)
datatable <- read.csv("F:/R-kurssi/datatable.csv")
View(datatable)
install.packages("party")
library("party", lib.loc="~/R/win-library/3.3")
install.packages("languageR")
library("languageR", lib.loc="~/R/win-library/3.3")
install.packages("designGLMM")
library("designGLMM", lib.loc="~/R/win-library/3.3")
detach("package:designGLMM", unload=TRUE)
library("designGLMM", lib.loc="~/R/win-library/3.3")
library("designGLMM", lib.loc="~/R/win-library/3.3")
library("dplyr", lib.loc="~/R/win-library/3.3")
library("ggplot2", lib.loc="~/R/win-library/3.3")
library("languageR", lib.loc="~/R/win-library/3.3")
library("party", lib.loc="~/R/win-library/3.3")
names(datatable)
datatable <- read.csv("F:/R-kurssi/datatable.csv")
View(datatable)
names(datatable)
variant.datatable <- cforest(depvar ~ X3w_str + strgt_n + amb + trg + pos,data=datatable)
?cut
matti<-1:100
length(matti)
cut(matti,0,25,50,75)
cut(matti,0:25:50:75:100)
cut(matti,breaks=24:50)
library("foreign", lib.loc="C:/Program Files/R/R-3.3.1/library")
read.dta(file=choose.files())
ess<-read.dta(file=choose.files())
install.packages("pxweb")
library("pxweb", lib.loc="~/R/win-library/3.3")
d <- interactive_pweb()
d <- interactive_pxweb()
View(d)
matti
?cut
matti
cut(matti,c(3,8,77))
cut(matti,c(0,8,77))
table(ess$tvtot)
mean(ess$tvtot)
View(ess)
sort(table(ess$tvtot))
ess$ppltrust
ess$ppltrst
sort(table(ess$tvtot))
?is.na
ess2<-ess
ess2$tvtot[ess2$tvtot=="No answer"|ess2$tvtot=="Refusal"|ess2$tvtot=="Don't know"]<-NA
View(ess2)
sort(table(ess2$tvtot))
a<-"matti"
str(a)
is.na(matti)
mean(ess$happy)
ess2$tvtot[ess2$tvtot %in% levels(ess2$tvtot)[9:11]
]
ess2$tvtot[ess2$tvtot %in% levels(ess2$tvtot)[9:11]]
levels(ess2$tvtot)
table(levels(ess2$tvtot))
table(levels(ess$tvtot))
table(ess$tvtot))
table(ess$tvtot)
table(ess2$tvtot)
ess2$siivottu_tvtot<-factor(ess2$tvtot)
sort(table(ess2$siivottu_tvtot))
levels(ess2$tvtot)
levels(ess2$siivottu_tvtot)
ess2$yrbrn
levels(ess2$yrbrn)
sort(table(ess2$yrbrn))
table(ess2$yrbrn)
ess2$tmp<-ess2$yrbrn
ess2$tmp[ess2$tmp==7777|ess2$tmp==8888|ess2$tmp==9999]<-NA
ess2$siivottu_yrbrn<-factor(ess2$tmp)
table(ess2$siivottu_yrbrn)
ess$ikä<-2014-ess2$siivottu_yrbrn
ess2$ikä<-2014-ess2$tmp
table(ess2$ikä)
library("dplyr", lib.loc="~/R/win-library/3.3")
filter(ess2,yrbrn>2000,yrbrn<10000)
ess2$svuosi<-ess2$tmp[is.na(ess2$svuosi)==F]
ess2$svuosi<-ess2$tmp[is.na(ess2$tmp)==F]
ess2$tmp[ess2$tmp==7777|ess2$tmp==8888|ess2$tmp==9999]<-NA
length(ess2$tmp)
table(ess2$tmp)
ess2$syntymävuosi<-ess2$tmp[is.na(ess2$tmp)==F]
length(ess2$yrbrn)
length(ess2$tmp)
table(ess2$tmp)
ess2$syntymävuosi<-ess2$tmp[is.na(ess2$tmp)==F] #herja
ess2$melkeinikä<-2014-ess2$tmp
table(ess2$melkeinikä)
ess2$ikä<-2014-ess2$tmp
table(ess2$ikä)
rnorm(20)
table(ess2$ikä)
ess2$luokiteltu_ikä<-cut(ess2$ikä,c(14,19,29,39,49,59,69,79,89,99,109,119))
ess2$luokiteltu_ikä
ess2$luokiteltu_ikä<-cut(ess2$ikä,c(14,20,30,40,50,60,70,80,90,100,110,120))
ess2$luokiteltu_ikä
levels(ess2$luokiteltu_ikä)
table(ess2$luokiteltu_ikä)
xtabs(ess2$tvtot ~ ess2$luokiteltu_ikä, ess2)
View(ess2)
head(ess2)
names(ess2)
View(ess2)
dim(ess)
dim(ess2)
xtabs(ess2$tvtot ~ ess2$luokiteltu_ikä, ess2)
?xtabs
xtabs(ess2$tvtot ~ ess2$luokiteltu_ikä, ess2)
luokiteltu_ikä
variant.datatable <- cforest(depvar ~ X3w_str + strgt_n + amb + trg + pos,data=datatable)
datatable.variant.varimp <- varimp(variant.datatable)
dotchart(sort(datatable.variant.varimp))
xtabs(~tvtot + luokiteltuikä , dataframejostadata) #tämä tekee kontingenssitaulukon
xtabs(~tvtot + luokiteltuikä , ess2) #tämä tekee kontingenssitaulukon
xtabs(~tvtot + luokiteltuikä , ess2) #tämä tekee kontingenssitaulukon
xtabs(~tvtot + luokiteltu_ikä , ess2) #tämä tekee kontingenssitaulukon
chisq.test(xtabs(~tvtot + luokiteltu_ikä , ess2))
chisq.test(xtabs(~tvtot + luokiteltu_ikä , ess2))
levels(ess2$tvtot)
names(datatable)
datatable.ctree<-ctree(depvar~X3w_str+strgt_n+amb+trg+pos,data=datatable)
plot(datatable.ctree)
names(ess2)
is.factor(ess2$siivottu_tvtot)
length(ess2$tvtot)
length(ess2$siivottu_tvtot)
xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2) #tämä tekee kontingenssitaulukon
xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2) #tämä tekee kontingenssitaulukon
chisq.test(xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2)) #tämän pitäisi tehdä kiin neliötesti, mutta ei toimaa
levels(ess2$siivottu_tvtot)
table(siivottu_tvtot)
table(ess2$siivottu_tvtot)
LakeHuron
LakeHuron
Nile
class(Nile)
class(LakeHuron)
summary(LakeHuron)
xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2) #tämä tekee kontingenssitaulukon
kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9))
kalastajalle
?data.frame
kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9),row.names=variantti)
kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9),row.names=1)
kalastajalle
(kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9),row.names=0))
(kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9),row.names="variantti"))
xtabs(~variantti + engelsmannit + kanukit , kalastajalle)
(kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9)))
xtabs(~variantti + engelsmannit + kanukit , kalastajalle)
(kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9)))
(kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9)))
xtabs(~variantti + engelsmannit + kanukit , kalastajalle)
kala <- read.csv("F:/R-kurssi/kala.csv")
View(kala)
kala
xtabs(~variantti + murre , kala)
fisher.test(xtabs(~variantti + murre , kala))
(kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9)))
?fisher.test
fisher.test(kala)
kala
xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2) #tämä tekee kontingenssitaulukon
chisq.test(xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2)) #tämän pitäisi tehdä kiin neliötesti, mutta df kusee
dotchart(sort(datatable.variant.varimp)) #tällä tuli random metsä
plot(datatable.ctree) #tällä tuli ehtojen inferointipuu
xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2) #tämä tekee kontingenssitaulukon
xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2) #tämä tekee kontingenssitaulukon
xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2) #tämä tekee kontingenssitaulukon
chisq.test(xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2)) #tämän pitäisi tehdä kiin neliötesti, mutta df kusee
dim(xtabs(~siivottu_tvtot + luokiteltu_ikä , ess2)) #tämä tekee kontingenssitaulukon
(kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9)))
fisher.test(kalastajalle)
fisher.test(kala)
fisher.test(kala)
fisher.test(xtabs(~variantti + murre , kala))
(kalastajalle<-data.frame(variantti=c("ms","should","harmony","zero"),engelsmannit=c(5,5,3,7),kanukit=c(7,3,1,9)))
ls(
)
a
rbrul()
source(file=choose.files)
source(file=choose.files())
rbrul()
names(datatable)
summary(depvar ~ X3w_str + amb + trg + pos)
summary(depvar ~ X3w_str + amb + trg + pos, data=datatable)
tiedot<-datatable
tiedot$depvar.is.MS<-as.numeric(tiedot$depvar)
head(tiedot)
summary(depvar.is.MS ~ X3w_str + amb + trg + pos, data=datatable)
summary(depvar.is.MS ~ X3w_str + amb + trg + pos, data=tiedot)
lmer
names(tiedot)
lmer(depvar.is.MS ~ X3w_str + amb + trg + pos, data=tiedot, family=binomial)
lmer(depvar.is.MS ~ X3w_str + amb + trg + pos, data=tiedot)
lmer(depvar.is.MS ~ X3w_str + amb + pos + (1|trg), data=tiedot)
lmer(depvar.is.MS ~ X3w_str + amb + pos + (1|trg), data=tiedot, family=binomial)
lmer(depvar.is.MS ~ X3w_str + amb + pos + (1|trg), data=tiedot)
q()
library("dplyr", lib.loc="~/R/win-library/3.3")
library("ggplot2", lib.loc="~/R/win-library/3.3")
plot(Sepal.Length~Sepal.Width,iris) #piirrä mitenkä korreloi lehden pituus lehden leveyden kanssa. pelkkä iris riitää data=iriksen sijaan jos se tulee juuri tuossa kohtaa. tämä on SCATTER PLOT nimeltään.
boxplot(len~dose,ToothGrowth) #tämä vissiin käsittelee selittävää muuttujaa IKÄÄN KUIN se olisi faktori, vaikkei se ole.
boxplot(len~dose+supp,ToothGrowth) #ahaa joo. tämä tekee kaikista faktoriyhdistelmistä omat ryhmänsä.   pelkän plotin kanssa ei toiminut, tuli kaksi eri kuviota. mutta tällä vain yksi, jolla tehty uusia ryhmiä noista eri yhdistelmistä.
t.test(Sepal.Length~Species,iris,subset=Species!="setosa") #t-testi.
plot(Sepal.Length~Sepal.Width,iris) #piirrä mitenkä korreloi lehden pituus lehden leveyden kanssa. pelkkä iris riitää data=iriksen sijaan jos se tulee juuri tuossa kohtaa. tämä on SCATTER PLOT nimeltään.
plot(Sepal.Length~Species,iris) #nyt selittävänä muuttujana on faktori eli tässä tapauksessa kukan alalaji. jolla on 3 leveliä eli 3 muuttujaa.
plot(Sepal.Length~Sepal.Width,iris) #piirrä mitenkä korreloi lehden pituus lehden leveyden kanssa. pelkkä iris riitää data=iriksen sijaan jos se tulee juuri tuossa kohtaa. tämä on SCATTER PLOT nimeltään.
plot(Sepal.Length~Species,iris) #nyt selittävänä muuttujana on faktori eli tässä tapauksessa kukan alalaji. jolla on 3 leveliä eli 3 muuttujaa.
sample(1:3,100,replace=T,prob=c(.6,.3,.1))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
sum(sample(1:3,100,replace=T,prob=c(.6,.3,.1))))-100*1.5
sum(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))-100*1.5
mean(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))
sum(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))-100*1.5
sum(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))-100*1.5
sum(sample(1:3,100,replace=T,prob=c(.6,.3,.1)))-100*1.5
sum(sample(0:1,100,replace=T,prob=c(-5,-5)))
sum(sample(0:1,100,replace=T,prob=c(.5,.5)))
sum(sample(0:1,10,replace=T,prob=c(.5,.5)))
sum(sample(0:1,10,replace=T,prob=c(.5,.5)))
sum(sample(0:1,10,replace=T,prob=c(.5,.5)))
sum(sample(0:1,10,replace=T,prob=c(.5,.5)))
sum(sample(0:1,10,replace=T,prob=c(.5,.5)))
?dbin
dbinom
?dbinom
pbinom(22,100,.2)
pbinom(25,100,.2,lower.tail=F)
round(pbinom(25,100,.2,lower.tail=F),digits=2)
round(pbinom(22,100,.2),digits=2)
Pbinom(18,100,.2,lower.tail=F)
pbinom(18,100,.2,lower.tail=F)
pbinom(18,100,.2,lower.tail=F)-pbinom(24,100,.2,lower.tail=F)
pbinom(18,100,.2,lower.tail=F)-pbinom(24,100,.2,lower.tail=F)
pbinom(18,100,.2,lower.tail=F)-(1-(pbinom(24,100,.2,lower.tail=F))
)
pbinom(18,100,.2,lower.tail=F)-(1-(pbinom(24,100,.2,lower.tail=T)))
?t.test
Sys.getlocale()
glm
data.frame(kipeet=vector(length=2),terveet=vector(length=2))
freimi<-data.frame(kipeet=vector(length=2),terveet=vector(length=2))
fix(freimi)
freimi
fix(freimi)
p1<-46/516
p0<-44/474
library(readr)
altistuneet<-c(46,470)
altistumattomat<-c(34,440)
rbind(altistuneet,altistumattomat)
chis.test(rbind(altistuneet,altistumattomat))
chisq.test(rbind(altistuneet,altistumattomat))
p11<-6/36
p01<-30/390
r1<-p11/p01
r1
p10<-40/480
p00<-4/84
r0<-p10/p00
r0
install.packages("tibble")
library("tibble", lib.loc="~/R/win-library/3.3")
update
install.packages(c("acepack", "BH", "car", "chron", "coin", "colorspace", "curl", "data.table", "DBI", "digest", "ggplot2", "Hmisc", "jsonlite", "mvtnorm", "openssl", "party", "pxR", "quantreg", "R6", "Rcpp", "reshape2", "scales", "SparseM", "stringi", "stringr", "TH.data", "zoo"))
install.packages(c("acepack", "BH", "car", "chron", "coin", "colorspace", "curl", "data.table", "DBI", "digest", "ggplot2", "Hmisc", "jsonlite", "mvtnorm", "openssl", "party", "pxR", "quantreg", "R6", "Rcpp", "reshape2", "scales", "SparseM", "stringi", "stringr", "TH.data", "zoo"))
install.packages(c("acepack", "BH", "car", "chron", "coin", "colorspace", "curl", "data.table", "DBI", "digest", "ggplot2", "Hmisc", "jsonlite", "mvtnorm", "openssl", "party", "pxR", "quantreg", "R6", "Rcpp", "reshape2", "scales", "SparseM", "stringi", "stringr", "TH.data", "zoo"))
library("tibble", lib.loc="~/R/win-library/3.3")
setwd(dir=choose.dir())
setwd("..")
setwd("..")
setwd("..")
setwd("..")
setwd("C:\Users\Juho Kristian\Desktop\ALR")
setwd("C:/Users/Juho Kristian/Desktop/ALR")
