deathpen$percent.kilt<-with(deathpen,round(killed/(killed+spared),digits=3))
deathpen
(m1<-deathpen[1:2,3:4])
m1
chisq.test(m1)
(WhiteVictim<-deathpen[1:2,3:4])
(BlackVictim<-deathpen[3:4,3:4])
fisher.test(BlackVictim)
deathpen
(total<-deathpen[5:6,3:4])
chisq.test(total)
chisq.test(total,correct = FALSE)
chisq.test(WhiteVictim,correct = FALSE)
chisq.test(WhiteVictim,correct = TRUE)
chisq.test(BlackVictim,correct = FALSE)
chisq.test(total,correct = FALSE)
chisq.test(total,correct = TRUE)
setwd(dir="c:/users/juho/desktop")
setwd("ALR")
load("C:/Users/juho/Desktop/ALR/JuhanData.RData")
sum((c0$observed[,1]-c0$expected[,1])**2/c0$expected[,1]+(c0$observed[,2]-c0$expected[,2]**2/c0$expected[,2]))
sum((C0$observed[,1]-C0$expected[,1])**2/C0$expected[,1]+(C0$observed[,2]-C0$expected[,2])**2/C0$expected[,2])
C0<-c0
rm(c0)
sum((C0$observed[,1]-C0$expected[,1])**2/C0$expected[,1]+(C0$observed[,2]-C0$expected[,2])**2/C0$expected[,2])
sum((c0$observed[,1]-c0$expected[,1])**2/c0$expected[,1]+(c0$observed[,2]-c0$expected[,2])**2/c0$expected[,2])
c0<-chisq.test(m,correct=FALSE)
sum((c0$observed[,1]-c0$expected[,1])**2/c0$expected[,1]+(c0$observed[,2]-c0$expected[,2])**2/c0$expected[,2])
rm(C0)
m1
m2
m2<-matrix(c(40,4,440,80),ncol=2)
rm(m0)
m2
m1
2.718*3.2
2.718*3.5
2.718*3.7
log(10)
2.718^3.5
2.718^3.4
log(30)
mantelhaen.test(M,correct = TRUE)
mantelhaen.test(M,correct = F)
matrix(c(46,34,470,440),ncol=2)
M1
m1
m2
addmargins(m1)
addmargins(m2)
addmargins(m)
str(M)
m
m1
m2
sekoittaja<-factor("ei","khyl")
sekoittaja
sekoittaja<-as.factor(c("ei","khyl"))
sekoittaja
M
rbinom(n=1000, size=1, prob=pnorm(x))
rnorm(1000)
?rnorm
rnum<-rnorm(1000)
mean(rnum)
sd(rnum)
pnorm(1)
pnorm(1.96)
\u0092
cat("\u0092")
cat("\u0097")
mantelhaen.test(M,correct = F)
mantelhaen.test(M,correct = T)
log(0.3)
log(0.7)
data.frame(cases=c(647,2),controls=c(622,27),row.names(c("smoker","non-smoker")))
data.frame(cases=c(647,2),controls=c(622,27),row.names=c("smoker","non-smoker")))
data.frame(cases=c(647,2),controls=c(622,27),row.names=c("smoker","non-smoker"))
addmargins(data.frame(cases=c(647,2),controls=c(622,27),row.names=c("smoker","non-smoker")))
crosstab<-data.frame(cases=c(647,2),controls=c(622,27),row.names=c("smoker","non-smoker"))
crosstab
knitr::opts_chunk$set(echo = TRUE)
(crosstab<-data.frame(cases=c(647,2),controls=c(622,27),row.names=c("smoker","non-smoker")))
colSums(crosstab)
rowSums(crosstab)
rbind(crosstab,rowSums(crosstab))
rbind(crosstab,Total=rowSums(crosstab))
rbind(crosstab,Total=colSums(crosstab))
WithRowSums<-cbind(crosstab,Total=rowSums(crosstab))
WithRowSums
WithRowSums<-cbind(crosstab,Total=rowSums(crosstab))
(crosstab2<-rbind(WithRowSums,Total=rowSums(crosstab)))
WithRowSums<-cbind(crosstab,Total=rowSums(crosstab))
(crosstab2<-rbind(WithRowSums,Total=colSums(crosstab)))
WithRowSums<-cbind(crosstab,Total=rowSums(crosstab))
(crosstab2<-rbind(WithRowSums,Total=colSums(crosstab)))
(p.smoke.cases<-crosstab2$cases[1]/sum(crosstab2$cases))
crosstab
WithRowSums<-cbind(crosstab,Total=rowSums(crosstab))
(crosstab2<-rbind(WithRowSums,Total=colSums(crosstab)))
(p.smoke.cases<-crosstab2$cases[1]/sum(crosstab2$cases))
(p.smoke.cases<-crosstab$cases[1]/sum(crosstab$cases))
(p.smoke.controls<-crosstab$controls[1]/sum(crosstab$controls))
(OR.smoking<-p.smoke.cases/p.smoke.controls)
chisq.test(crosstab)
chisq.test(crosstab, correct = FALSE)
crosstab
crosstab2
2.664e-06
(crosstab3<-data.frame(ill=c(57,87),healthy=c(118,185),row.names=c("exposed","not.exposed")))
crosstab3<-data.frame(ill=c(57,87),not.ill=c(118,185),row.names=c("exposed","not.exposed"))
WithRowSums2<-cbind(crosstab3,Total=rowSums(crosstab3))
(WithMarginalTotals<-rbind(WithRowSums2,Total=colSums(WithRowSums2)))
chisq.test(crosstab3,correct = FALSE)
crosstab3<-data.frame(ill=c(57,87),not.ill=c(118,185),row.names=c("exposed","not.exposed"))
WithRowSums2<-cbind(crosstab3,Total=rowSums(crosstab3))
(WithMarginalTotals<-rbind(WithRowSums2,Total=colSums(WithRowSums2)))
chisq.test(crosstab3,correct = FALSE)
matrix(c(5,5,6,6),ncol = 2,dimnames = list(c("elo","elhos"),c("givhes","siitins")))
(matu<-as.matrix(crosstab))
matu
addmargins(crosstab)
addmargins(matu)
(ristitaul<-matrix(ncol = 2,c(647,2),c(622,27),dimnames = list(c("smoker",non-smoker),c("cases","controls"))))
(ristitaul<-matrix(ncol = 2,c(647,2),c(622,27),dimnames = list(c("smoker","non-smoker"),c("cases","controls"))))
(ristitaul<-matrix(ncol = 2,c(647,2,622,27),dimnames = list(c("smoker","non-smoker"),c("cases","controls"))))
crosstab
(crosstab<-matrix(ncol = 2,c(647,2,622,27),dimnames = list(c("smoker","non-smoker"),c("cases","controls"))))
crosstab3
addmargins(crosstab)
str(crosstab)
crosstab
crosstab$cases[1]
crosstab[2,2]
crosstab[2,1]
crosstab[1,1]
(crosstab2<-matrix(ncol=2,c(57,87,118,185),dimnames=list(c("exposed","non-exposed"),c("ill","not.ill"))))
(c(5,6,3)->mikko)
mikko
rm(mikko)
c(5,6,3)->mikko%>%summary
install.packages("magrittr")
library("magrittr", lib.loc="~/R/win-library/3.3")
knitr::opts_chunk$set(echo = TRUE)
matrix(ncol=2,c(57,87,118,185),dimnames=list(c("exposed","non-exposed"),c("ill","not.ill")))->crosstab2 %>% addmargins
matrix(ncol=2,c(57,87,118,185),dimnames=list(c("exposed","non-exposed"),c("ill","not.ill"))) -> crosstab2 %>% addmargins
c(5,6,2)->mikko%>%summary
c(5,6,2)->mikko
mikko
c(4,4,984)->mikko %>% summary()
c(4,4,984)->mikko %>% summary
summary(mikko<-c(5,6,2)
summary(mikko<-c(5,6,2))
mikko
detach("package:magrittr", unload=TRUE)
addmargins(crosstabs2<-matrix(ncol=2,c(57,87,118,185),dimnames=list(c("exposed","non-exposed"),c("ill","not.ill"))))
crosstabs2
chisq.test(crosstabs2)
chisq.test(crosstabs2, correct = FALSE)
addmargins(crosstabs2 <- matrix(ncol=2, c(57,87,118,185), dimnames = list(c("exposed","non-exposed"),c("ill","healthy"))))
chisq.test(crosstabs2, correct = FALSE)
(stratum1<-matrix(ncol=2, c(16,50,80,165), dimnames=list(c("exposed","non-exposed"),"Stratum 1"=c("ill","healthy"))))
(stratum1<-matrix(ncol=2, c(16,50,80,165), dimnames=list(c("exposed","non-exposed"),Stratum1=c("ill","healthy"))))
(stratum2<-matrix(ncol=2, c(41,37,38,20), dimnames=list(c("exposed","non-exposed"),"Stratum 2"=c("ill","healthy"))))
chisq.test(stratum1,correct = FALSE)
addmargin(stratum1<-matrix(ncol=2, c(16,50,80,165), dimnames=list(c("exposed","non-exposed"),"Stratum 1"=c("ill","healthy"))))
addmargins(stratum1<-matrix(ncol=2, c(16,50,80,165), dimnames=list(c("exposed","non-exposed"),"Stratum 1"=c("ill","healthy"))))
addmargins(stratum2<-matrix(ncol=2, c(41,37,38,20), dimnames=list(c("exposed","non-exposed"),"Stratum 2"=c("ill","healthy"))))
(OR.stratum1<-(16/80)/(50/165))
(OR.stratum2<-(41/38)/(37/20))
chisq.test(stratum1, correct = FALSE)
chisq.test(stratum2, correct = FALSE)
crosstabs2
crosstabs2["non-exposed"]
crosstabs2["non-exposed",]
crosstabs2["non-exposed","ill"]
rm(crosstabs2)
addmargins(crosstabs <- matrix(ncol=2,
c(57,87,118,185),
dimnames = list(c("exposed","non-exposed"),
c("ill","healthy"))))
rm(crosstabs)
addmargins(crosstab2 <- matrix(ncol=2,
c(57,87,118,185),
dimnames = list(c("exposed","non-exposed"),
c("ill","healthy"))))
chisq.test(crosstab2, correct = FALSE)
crosstab
crosstab2
prop.table(crosstab2)
?prop.table
prop.table(crosstab2,2)
prop.table(crosstab2,1)
(stratum1<-matrix(ncol=2, c(16,50,80,165),
dimnames=list(c("exposed","non-exposed"),"Stratum 1"=c("ill","healthy"))))
(stratum2<-matrix(ncol=2, c(41,37,38,20),
dimnames=list(c("exposed","non-exposed"),"Stratum 2"=c("ill","healthy"))))
prop.table(stratum1,1)
prop.table(stratum2,1)
9*8/2==(9*8)/2
((16*165/2)+(41*20/2))/((80*50/2)+(38*37/2))
OR.stratum1
OR.stratum2
(manual.commonOR<-((16*165/2)+(41*20/2))/
((80*50/2)+(38*37/2)))
matrix(ncol = 3, c(rep(5,3),c(2,6,4)))
matrix(ncol = 2, c(rep(5,3),c(2,6,4)))
array(dim=c(2,2,2), list(rep(0,4),stratum1,stratum2))
array(dim=c(2,2,2), c(rep(0,4),stratum1,stratum2))
stratum1
stratum2
array(dim=c(2,2,2), c(rep(0,2),stratum1,stratum2))
array(dim=c(2,2,2), c(0,0),c(0,0),c(stratum1,stratum2))
array(dim=c(2,2,2), list(c(0,0),c(0,0),c(stratum1,stratum2))
)
array(dim=c(2,2,2), list(c(0,0),c(0,0),c(stratum1,stratum2)))
array(dim=c(2,2,2), c("yy","kaa","koo","nee","vii","kuu","see","kasi"))
array(dim=c(2,2,2), list(0,0,0,0,stratum1,stratum2))
array(dim=c(2,2,2), c(stratum1,stratum2))
array(dim=c(2,2,2), c(stratum1,stratum2))
stratum1
stratum2
(both.strata<-array(dim=c(2,2,2), c(stratum1,stratum2)))
array(dim=c(2,2,2), c(stratum1,stratum2))
array(dim=c(2,2,2), c("Stratum 1"=stratum1, "Stratum 2"=stratum2))
array(dim=c(2,2,2), c(firststratum=stratum1, secondstratum=stratum2))
mantelhaen.test(both.strata, correct = FALSE)
mantelhaen.test(both.strata, correct = T)
mantelhaen.test(both.strata, correct = FALSE)
crosstab
crosstab["smoker","cases"]
crosstab["cases","smoker"]
crosstab["smoker","cases"]
crosstab["smoker","cases"]/sum(crosstab["cases"])
crosstab["smoker","cases"]/sum(crosstab[,"cases"])
crosstab["smoker","controls"]/sum(crosstab[,"controls"])
rm(manual.commonOR)
log(.3)
log(.7)
library("ggplot2", lib.loc="~/R/win-library/3.3")
?runif
n <- 30
i <- 1:n
x <- (i-15.5)/14.5
B0 <- log(0.3)
B1 <- 2
p <- B0 + B1*x[i]
p
plot(p,type="l")
plot(log(p/(1-p)),type="l")
.25/(1-.25)
log(.25/(1-.25))
i
log(p/(1-p))
x
B0
p
p
logodds <- B0 + B1*x[i]
rm(p)
logodds
logodds
plot(type="l",exp(logodds)/(1+exp(logodds)))
p <- exp(logodds)/(1+exp(logodds))
p
g<-ggplot(aes(x=i,y=0:1))
qplot(i,type="line")
qplot(p,geom = "line")
qplot(i,p,geom = "line")
qplot(x,p,geom = "line")
rm(B0,B1,logodds,p)
qplot(x,p,geom = "line",ggtitle=("Probability as Function of Predictor X"))
qplot(x.I,p.I,geom = "line",ggtitle=("Probability as Function of Predictor X"))
qplot(x,p.I,geom = "line",ggtitle=("Probability as Function of Predictor X"))
n <- 30
i <- 1:n
x <- (i-15.5)/14.5
B0.I <- log(0.3)
B1.I <- 2
logodds.I <- B0 + B1*x[i]
n <- 30
i <- 1:n
x <- (i-15.5)/14.5
B0.I <- log(0.3)
B1.I <- 2
logodds.I <- B0.I + B1.I*x[i]
p.I <- exp(logodds.I)/(1+exp(logodds.I))
qplot(x,p,geom = "line",ggtitle=("Probability as Function of Predictor X"))
qplot(x,p.I,geom = "line",ggtitle=("Probability as Function of Predictor X"))
?qplot
qplot(x,p.I,geom = "line",main=("Probability as Function of Predictor X"))
qplot(x,p.I,geom = "line",main=("Probability as a function of Predictor X"))
qplot(x,p.I,geom = "line",main=("Probability as a function of predictor x"))
?qplot
summary(x.I)
summary(x)
x
B0.II <- log(0.3)
B1.II <- -2
logodds.II <- B0.II + B1.II*x[i]
p.II <- exp(logodds.II)/(1+exp(logodds.II))
B0.III <- log(0.7)
B1.III <- 2
logodds.III <- B0.III + B1.III*x[i]
p.III <- exp(logodds.III)/(1+exp(logodds.III))
OurData <- data.frame(i,x,B0.I,B1.I,logodds.I,p.I,
B0.II,B1.II,logodds.II,p.II,
B0.III,B1.III,logodds.III,p.III)
qplot(x,p.I,geom = "line",main=("Probability as a function of predictor x"))
qplot(x,p.II,geom = "line",main=("Probability as a function of predictor x"))
qplot(x,p.III,geom = "line",main=("Probability as a function of predictor x"))
qplot(x,p.I,geom = "line",main=("Probability as a function of predictor x"))
qplot(x,p.III,geom = "line",main=("Probability as a function of predictor x"))
qplot(x,p.II,geom = "line",main=("Probability as a function of predictor x"))
ggplot(data=OurData, aes(x=x, y=p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1),breaks=c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(.1,.9),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(.1,.9),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_line(p.III)
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(.1,.9),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_line(aes(y=p.III))
View(OurData)
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(.1,.9),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_smooth(aes(y=p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(.1,.9),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_line(p.III)
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(.1,.9),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_line(aes(p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(.1,.9),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_line(aes(y=p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_line(aes(y=p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_smooth(aes(y=p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_line(aes(y=p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_line(aes(y=p.I))+geom_line(aes(y=p.II))+geom_line(aes(y=p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_smooth(aes(y=p.I))+geom_smooth(aes(y=p.II))+geom_smooth(aes(y=p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1),breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9))+geom_line(aes(y=p.I))+geom_line(aes(y=p.II))+geom_line(aes(y=p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1), breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9)) + geom_line(aes(y=p.I),color="p.I")+geom_line(aes(y=p.II))+geom_line(aes(y=p.III))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1), breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9)) + geom_line(aes(y=p.I,x=x,color="p.I"))+geom_line(aes(y=p.II,x=x,color="p.II"))+geom_line(aes(y=p.III,x=x,color="p.I"))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1), breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9)) + geom_line(aes(y=p.I,x=x,color="p.I"))+geom_line(aes(y=p.II,x=x,color="p.II"))+geom_line(aes(y=p.III,x=x,color="p.III"))
?seq
seq(from=-1,to=1,by=.1)
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1), breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9)) + scale_x_continuous(breaks=seq(-1,1,.1) + geom_line(aes(y=p.I,x=x,color="p.I"))+geom_line(aes(y=p.II,x=x,color="p.II"))+geom_line(aes(y=p.III,x=x,color="p.III"))
)
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1), breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9)) + scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) + geom_line(aes(y=p.I,x=x,color="p.I"))+geom_line(aes(y=p.II,x=x,color="p.II"))+geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1), breaks=seq(0,1,.1)) + scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) + geom_line(aes(y=p.I,x=x,color="p.I"))+geom_line(aes(y=p.II,x=x,color="p.II"))+geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) + scale_y_continuous(limits=c(0,1), breaks=seq(from=0,to=1,by=0.1)) + scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) + geom_line(aes(y=p.I,x=x,color="p.I"))+geom_line(aes(y=p.II,x=x,color="p.II"))+geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(limits=c(-.95,.95),breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(limits=c(-1,1),breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
ylab("Probability")
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
B0.III,B1.III,logodds.III,p.III)
ggplot(data=OurData, aes(x=x, y=p.III)) +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
ylab("Probability") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(limits=c(-.95,.95),breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(limits=c(-.95,.95),breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
ylab("Probability")
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
ylab("Probability") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
ylab("p") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
ggtitle("Probability as a function of X with three different combinations of B0 and B1")
ylab("p") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
ggplot(data=OurData, aes(x=x, y=p.III)) +
ggtitle("Probability as a function of X with three different combinations of B0 and B1") +
ylab("p") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.1)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
exp(-2)/(1+exp(-2))
p <- 0.119203
log(p/(1-p))
round(log(p/(1-p)))
(OR.smoking<-(p.smoke.cases/(1-p.smoke.cases))/(p.smoke.controls/(1-p.smoke.controls)))
(OR.smoking<-(p.smoke.cases/(1-p.smoke.cases))/(p.smoke.controls/(1-p.smoke.controls)))
(odds.smoke.cases<-(647/649)/(1-(647/649)))
(odds.smoke.controls<-(622/649)/(1-(622/649)))
rm(p.smoke.cases,p.smoke.controls)
(OR.smoking<-odds.smoke.cases/odds.smoke.controls)
x
round(
log(p/(1-p)),
digits=1)
round(
log(p/(1-p)),
digits=2)
round(
log(p/(1-p)),
digits=3)
round(
log(p/(1-p))
)
.3/.7
logit
-1.1548/0.5962
n <- 30
i <- 1:n
x <- (i-15.5)/14.5
B0.I <- log(0.3/(1-0.3))
logodds.I <- B0.I + B1.I*x[i]
p.I <- exp(logodds.I)/(1+exp(logodds.I))
qplot(x,p.I,geom = "line",main=("Probability as a function of X and a constant"))
B0.II <- log(0.3/(1-0.3))
logodds.II <- B0.II + B1.II*x[i]
B0.III <- log(0.7/(1-0.7))
logodds.III <- B0.III + B1.III*x[i]
OurData <- data.frame(i, x, B0.I, B1.I, logodds.I, p.I,
B0.II, B1.II, logodds.II, p.II,
B0.III, B1.III, logodds.III, p.III)
p.II <- exp(logodds.II)/(1+exp(logodds.II))
p.II <- exp(logodds.II)/(1+exp(logodds.II))
logodds.III <- B0.III + B1.III*x[i]
p.III <- exp(logodds.III)/(1+exp(logodds.III))
n <- 30
i <- 1:n
x <- (i-15.5)/14.5
B0.I <- log(0.3/(1-0.3))
B1.I <- 2
logodds.I <- B0.I + B1.I*x[i]
p.I <- exp(logodds.I)/(1+exp(logodds.I))
library(ggplot2)
qplot(x,p.I,geom = "line",main=("Probability as a function of X and a constant"))
B0.II <- log(0.3/(1-0.3))
B1.II <- -2
logodds.II <- B0.II + B1.II*x[i]
p.II <- exp(logodds.II)/(1+exp(logodds.II))
B0.III <- log(0.7/(1-0.7))
B1.III <- 2
logodds.III <- B0.III + B1.III*x[i]
p.III <- exp(logodds.III)/(1+exp(logodds.III))
OurData <- data.frame(i, x, B0.I, B1.I, logodds.I, p.I,
B0.II, B1.II, logodds.II, p.II,
B0.III, B1.III, logodds.III, p.III)
ggplot(data=OurData, aes(x=x, y=p.III)) +
ggtitle("Probability as a function of X with three different\ncombinations of B0 and B1") +
ylab("p") +
scale_y_continuous(limits=c(0,1),
breaks=seq(from=0,to=1,by=0.1)) +
scale_x_continuous(breaks=seq(from=-1,to=1,by=0.2)) +
geom_line(aes(y=p.I,x=x,color="p.I")) +
geom_line(aes(y=p.II,x=x,color="p.II")) +
geom_line(aes(y=p.III,x=x,color="p.III"))
qplot(x,p.I,geom = "line",main=("Logodds(p) = B0.I + B1.I*x"))
qplot(x,p.I,geom = "line",main=("p = logit^-1(B0.I + B1.I*x)"))
qplot(x,p.I,geom = "line",main=("Probability = logit^-1(B0.I + B1.I*x)"))
